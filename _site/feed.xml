<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-10-07T17:39:39-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">‘Tine Zekis</title><subtitle>'Tine Zekis (she/her) is a software engineer, speaker, and advocate for Diversity, Equity, and Inclusion in Tech. This site contains a collection of content produced by 'Tine. Find her blogs, slides, videos, and more.</subtitle><author><name>'Tine Zekis</name></author><entry><title type="html">Curriculum to Command Line</title><link href="http://localhost:4000/blog/2019/09/19/curriculum-to-command-line.html" rel="alternate" type="text/html" title="Curriculum to Command Line" /><published>2019-09-19T00:00:00-05:00</published><updated>2019-09-19T00:00:00-05:00</updated><id>http://localhost:4000/blog/2019/09/19/curriculum-to-command-line</id><content type="html" xml:base="http://localhost:4000/blog/2019/09/19/curriculum-to-command-line.html">&lt;p&gt;
  &lt;em&gt;This article is adapted from a talk I gave at &lt;a target=&quot;blank&quot; href=&quot;https://www.javascriptandfriends.com/&quot;&gt;JavaScript &amp;amp; Friends&lt;/a&gt; and &lt;a target=&quot;blank&quot; href=&quot;https://www.musiccitytech.com/&quot;&gt;Music City Code&lt;/a&gt;. You can find the slides from that talk &lt;a target=&quot;blank&quot; href=&quot;https://speakerdeck.com/tinezekis/curriculum-to-command-line-why-teachers-make-great-coders-and-what-your-team-can-learn-from-them&quot;&gt;here&lt;/a&gt;. You can also read this article on &lt;a target=&quot;blank&quot; href=&quot;https://medium.com/@tinezekis/curriculum-to-command-line-why-teachers-make-great-coders-and-what-your-team-can-learn-from-them-2079c533a01a&quot;&gt;Medium&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;/imgs/20190919-curriculum-to-command-line/01-title-page.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;
  Hello! My name is Christine Zekis, but I go by ‘Tine Zekis, which also happens to be my Twitter handle (&lt;a target=&quot;blank&quot; href=&quot;https://twitter.com/tinezekis&quot;&gt;tinezekis&lt;/a&gt;). My pronouns are she, her, hers. I’m a Software Engineer and a former High School Math Teacher.
&lt;/p&gt;

&lt;p&gt;
  Before we dig in, I’d like you to take a moment to consider this question: &lt;em&gt;Who was your favorite teacher and why?&lt;/em&gt; This could be anyone from your preschool teacher to a college professor, or anything in between. And it doesn’t need to be from a traditional education setting…maybe it’s your Sunday school teacher, or a dance instructor, or a soccer coach.
&lt;/p&gt;

&lt;p&gt;
  Here’s what I came up with when I did this exercise:
&lt;/p&gt;

&lt;p&gt;
  My favorite teacher was my high school geometry teacher, Ms. Hardin.
  &lt;ul&gt;
    &lt;li&gt;She had a great sense of humor&lt;/li&gt;
    &lt;li&gt;She was able to break down logic and explain her reasoning&lt;/li&gt;
    &lt;li&gt;She related the content to our lives&lt;/li&gt;
    &lt;li&gt;She was deeply committed to her students&lt;/li&gt;
  &lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
  Now that you’ve thought a bit about what makes an awesome teacher, I’d like to spend a few minutes convincing you of my premise…that awesome teachers make awesome coders.
&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; src=&quot;/imgs/20190919-curriculum-to-command-line/02-argument.png&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;(Awesome) Teachers Make Awesome Coders&lt;/h3&gt;

&lt;p&gt;
  While planning any lesson, most teachers will start with the learning objectives. What will students be able to do as a result of this lesson? A learning objective might be something like, “As a student in Ms. Zekis’s Algebra class, I can apply the quadratic formula to solve word problems involving trajectory.” Perhaps you’ve seen something similar in your work, only developers would call this a &lt;em&gt;&lt;strong&gt;user story&lt;/strong&gt;&lt;/em&gt;. A user story could be, “As a user with admin access, I can edit the names and email addresses of other users.”
&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; src=&quot;/imgs/20190919-curriculum-to-command-line/03-user-stories.png&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Learning Objectives =&amp;gt; User Stories&lt;/h4&gt;

&lt;p&gt;
  So let’s talk about the learning objectives, or user stories, for this article:
  &lt;ol&gt;
    &lt;li&gt;As a &lt;strong&gt;programmer&lt;/strong&gt;, I can improve my comprehension and hone my problem-solving skills by creating and taking opportunities to teach others.&lt;/li&gt;
    &lt;li&gt;As a &lt;strong&gt;team member&lt;/strong&gt;, I can improve my communication skills by breaking down concepts for a variety of audiences.&lt;/li&gt;
    &lt;li&gt;As a &lt;strong&gt;leader&lt;/strong&gt;, I can help my team to become better collaborators by creating a culture of teaching and learning.&lt;/li&gt;
    &lt;li&gt;As a &lt;strong&gt;hiring manager&lt;/strong&gt;, I can appreciate the skills that former educators and other career changers may bring to the table.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/p&gt;

&lt;p&gt;
  Consider these various roles and decide what your goals will be for the remainder of your reading here. Try to focus on one or two of these objectives as we continue on.
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;
  After establishing the learning objectives, teachers will typically move on to the assessment. How do we know we met our objectives? Translating this to the world of coding isn’t too much of a stretch: this is when we would write our tests or specs. How do we know the code does what we say it does?
&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; src=&quot;/imgs/20190919-curriculum-to-command-line/04-write-the-tests.png&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Write the Assessment =&amp;gt; Write the Tests&lt;/h4&gt;

&lt;p&gt;
  When I used to write math exams, I would start by making sure the students can solve a particular type of problem with an intuitive solution. For instance, the answer is a positive, whole number. Developers might call this the &lt;em&gt;&lt;strong&gt;happy path&lt;/strong&gt;&lt;/em&gt;. But I also want to make sure the students can solve problems with harder solutions. Maybe the answer is negative, or zero. Maybe it’s a very large number or a decimal. These are our &lt;em&gt;&lt;strong&gt;edge cases&lt;/strong&gt;&lt;/em&gt;.
&lt;/p&gt;

&lt;p&gt;
  And not until the assessment is done do I start to figure out what the students must do to get from where they are to where they will need to be to meet the objectives. In education, we call this Backward Planning, or Outcome-Based Education. In the tech industry, we might call this &lt;em&gt;&lt;strong&gt;test-driven development (TDD)&lt;/strong&gt;&lt;/em&gt;.
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;
  Then, after all the planning, it’s time to actually teach the lesson. This is usually around the time that 90% of the plan gets thrown out the window. I’m going to call this part &lt;em&gt;&lt;strong&gt;deployment&lt;/strong&gt;&lt;/em&gt;. Throw it out there and wait for something to go wrong.
&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; src=&quot;/imgs/20190919-curriculum-to-command-line/05-deployment.png&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Teaching the Lesson =&amp;gt; Deployment&lt;/h4&gt;

&lt;p&gt;
  Various studies have estimated that teachers make anywhere from 1,000 to 3,000 decisions per day in their classrooms. I’ve seen &lt;a target=&quot;blank&quot; href=&quot;http://info.csp.edu/globalassets/academic-resources/academic-departments/teacher-education/teacher-education-conceptual-framework.pdf&quot;&gt;1,500&lt;/a&gt; cited most often, so we’ll stick with that for the sake of argument. If we assume a day from 8:00am to 3:00pm with a 30-minute lunch break, that’s more than 230 decisions per hour, which is almost 4 per minute. So that’s a decision just about every 15 seconds. Teachers are constantly adjusting to the changing situations in their classrooms — moving closer to the student who seems distracted, pausing to assess understanding, switching gears if the class isn’t getting it or just seems restless.
&lt;/p&gt;

&lt;p&gt;
  I’m not sure about you, but that’s the kind of person I want troubleshooting support issues on my team. Plus, who better to have on an Agile team doing CI/CD? Our teams need to be nimble, able to pivot when we get new requirements or feedback from our users. And teachers are trained in that kind of flexibility and willingness to change directions.
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; src=&quot;/imgs/20190919-curriculum-to-command-line/06-lifelong-learners.png&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Lifelong Learners =&amp;gt; Lifelong Learners&lt;/h4&gt;

&lt;p&gt;
  One more transferable skill teachers can bring to development is their commitment to lifelong learning. Teachers are constantly growing, adjusting, and learning new things. I’m not going to change this one. This applies to coders without any updates. Technology is always changing, and to do well in this field, coders need to be constantly growing, adjusting, and learning new things.
&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;
  Okay, let’s bring it back to our initial conversation. Think about that favorite teacher you remembered earlier, and consider this: &lt;em&gt;Would your favorite teacher make a great coder? Why or why not?&lt;/em&gt;
&lt;/p&gt;

&lt;p&gt;
  Here are some things I came up with when I did this. Reasons a teacher might make a great coder:
  &lt;ul&gt;
    &lt;li&gt;Adjusts well to changing situations&lt;/li&gt;
    &lt;li&gt;Good at predicting what might go wrong&lt;/li&gt;
    &lt;li&gt;Enjoys solving interesting problems&lt;/li&gt;
    &lt;li&gt;Can break down problems into smaller steps&lt;/li&gt;
    &lt;li&gt;Thinks outside the box&lt;/li&gt;
    &lt;li&gt;Cares deeply about students — Could this translate to caring for users or teammates?&lt;/li&gt;
  &lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
  Maybe your favorite teacher just gave really good hugs. Is that something that could translate to being an empathetic programmer? Or maybe they were really good at calling you out on your bullshit. How could that be useful on an engineering team?
&lt;/p&gt;

&lt;p&gt;
  And now we’ve come to the most important part of this article…
&lt;/p&gt;

&lt;h3&gt;So What?&lt;/h3&gt;

&lt;p&gt;
  What does any of this have to do with you? Well, let’s revisit that last point about teachers and coders: they are both lifelong learners.
&lt;/p&gt;

&lt;p&gt;
  I hope we can all agree that, in order to excel in this field, we need to be willing and able to continue learning. Now, there are countless studies on how people learn, but I’m going to go way back to some early thinking on the topic. Aristotle once said, “Teaching is the highest form of understanding.” (&lt;a target=&quot;blank&quot; href=&quot;https://www.teachthought.com/pedagogy/great-best-quotes-about-teaching/&quot;&gt;Source&lt;/a&gt;) Since then, people have done tons of research on the matter, and this seems to actually be the case.
&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;80%&quot; src=&quot;/imgs/20190919-curriculum-to-command-line/07-protege-effect.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;
  Psychologists call it the &lt;strong&gt;Protégé Effect&lt;/strong&gt;. The Protégé Effect is the improved short-term and long-term comprehension one gets from preparing to teach and carrying out a lesson on a new concept. In other words, if you want to learn something, the best thing you can do is teach it.
&lt;/p&gt;

&lt;p&gt;
  Some of the statistically significant &lt;a target=&quot;blank&quot; href=&quot;https://effectiviology.com/protege-effect-learn-by-teaching/&quot;&gt;results of the effect&lt;/a&gt; include:
  &lt;ul&gt;
    &lt;li&gt;&lt;em&gt;Increased metacognitive processing&lt;/em&gt; — awareness of your learning process&lt;/li&gt;
    &lt;li&gt;&lt;em&gt;Increased use of effective learning strategies&lt;/em&gt; — things like organizing the material in a logical way, seeking out key pieces of information or major takeaways, etc.&lt;/li&gt;
    &lt;li&gt;&lt;em&gt;Increased motivation to learn&lt;/em&gt; — people often take their learning more seriously when they’re responsible for educating others, rather than just themselves&lt;/li&gt;
    &lt;li&gt;&lt;em&gt;Increased feelings of competence and autonomy&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;em&gt;Improved communication skills, confidence, and leadership ability&lt;/em&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
  So with all of these benefits, it’s pretty compelling as an advantageous and effective way to learn new things.
&lt;/p&gt;

&lt;h4&gt;Ways to Benefit from the Effect&lt;/h4&gt;

&lt;p&gt;
  There are multiple ways to experience these benefits. First, you can simply &lt;em&gt;&lt;strong&gt;prepare&lt;/strong&gt;&lt;/em&gt; to teach the concept. Organize the information, consider the answers to potential questions your audience might ask, etc. Planning the lesson alone has been shown to produce some form of the Protégé Effect.
&lt;/p&gt;

&lt;p&gt;
  You can also &lt;em&gt;&lt;strong&gt;pretend&lt;/strong&gt;&lt;/em&gt; to teach the topic. Go through the content out loud, as if you are teaching.
&lt;/p&gt;

&lt;p&gt;
  However, the strongest benefits of the Protégé effect will come if you actually &lt;em&gt;&lt;strong&gt;teach&lt;/strong&gt;&lt;/em&gt; a lesson on the topic.
&lt;/p&gt;

&lt;h4&gt;Ways to Teach&lt;/h4&gt;

&lt;p&gt;
  There are also lots of ways to teach. One is to &lt;em&gt;&lt;strong&gt;give a talk&lt;/strong&gt;&lt;/em&gt;. You can give a lightning talk, host a lunch &amp;amp; learn, lead a meeting, or put together some other form of group presentation.
&lt;/p&gt;

&lt;p&gt;
  Not a fan of public speaking? No problem! &lt;em&gt;&lt;strong&gt;Write it down&lt;/strong&gt;&lt;/em&gt; instead. You can break down concepts in writing through a blog tutorial, or maybe some detailed documentation.
&lt;/p&gt;

&lt;p&gt;
  You can also teach in a one-on-one setting by taking on the role of &lt;em&gt;&lt;strong&gt;mentor&lt;/strong&gt;&lt;/em&gt;.
&lt;/p&gt;

&lt;p&gt;
  And I’m sure you can think of other ways to start teaching. Get creative…maybe you want to do a code demo and post it on YouTube. Just as long as you’re communicating information to an audience of some sort.
&lt;/p&gt;

&lt;h3&gt;So, What Next?&lt;/h3&gt;

&lt;p&gt;
  So, what can you do differently this coming Monday? Well, old habits die hard, so I’m going to give you some homework.
&lt;/p&gt;

&lt;h4&gt;What can I teach?&lt;/h4&gt;

&lt;p&gt;
  Over the next couple of days, try to think about what kinds of things you can teach. Maybe you want to talk about a fun side project you’re working on, or a new technology you’re considering for your team. Or you could talk about the problem you figured out most recently. I’ve found a good rule of thumb to be that if any problem ends up being more than a quick Google search or visit to StackOverflow to solve, write it down. It’s probably a good candidate for a lightning talk or a blog post.
&lt;/p&gt;

&lt;h4&gt;What else can I do in my current role to engender a culture of teaching and learning?&lt;/h4&gt;

&lt;p&gt;
  Additionally, I’d like you to think about what else you can do in your current role to help create a culture of teaching and learning on your team. For instance, my team has a designated time for weekly 5-minute lightning talks, and people can just sign up. We also have bi-weekly tech demos where teams show off something they’ve been working on. Last month, our summer interns got the chance to present a feature they built, which was a great opportunity to showcase their work and answer questions about it.
&lt;/p&gt;

&lt;h4&gt;What Would Teacher Do?&lt;/h4&gt;

&lt;p&gt;
  And finally, I want you to think about what your favorite teacher would do. What’s something that made that teacher awesome? Could you do something similar in your own role?
&lt;/p&gt;

&lt;p&gt;
  My favorite teacher, Ms. Hardin, could always lighten the mood and create a positive environment by telling silly jokes. And I was the person on my team who helped keep up a tradition of starting every day with a Dad joke on Slack.
&lt;/p&gt;

&lt;p&gt;
  So what’s something you can do that your awesome teacher did?
&lt;/p&gt;

&lt;h3&gt;Resources&lt;/h3&gt;

&lt;p&gt;
  Special thanks to all the people who made and released these awesome resources for free:
  &lt;ul&gt;
    &lt;li&gt;Teacher statistics from &lt;a target=&quot;blank&quot; href=&quot;http://info.csp.edu/globalassets/academic-resources/academic-departments/teacher-education/teacher-education-conceptual-framework.pdf&quot;&gt;Concordia University, St. Paul&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Aristotle quote from &lt;a target=&quot;blank&quot; href=&quot;https://www.teachthought.com/pedagogy/great-best-quotes-about-teaching/&quot;&gt;TeachThought&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Protégé Effect summary by &lt;a target=&quot;blank&quot; href=&quot;https://effectiviology.com/protege-effect-learn-by-teaching/&quot;&gt;Effectiviology&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Presentation template by &lt;a target=&quot;blank&quot; href=&quot;https://www.slidescarnival.com/&quot;&gt;SlidesCarnival&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/p&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">This article is adapted from a talk I gave at JavaScript &amp;amp; Friends and Music City Code. You can find the slides from that talk here. You can also read this article on Medium.</summary></entry><entry><title type="html">Career Changers &amp;amp; Impostor Syndrome</title><link href="http://localhost:4000/blog/2019/01/10/career-changers-and-impostor-syndrome.html" rel="alternate" type="text/html" title="Career Changers &amp; Impostor Syndrome" /><published>2019-01-10T00:00:00-06:00</published><updated>2019-01-10T00:00:00-06:00</updated><id>http://localhost:4000/blog/2019/01/10/career-changers-and-impostor-syndrome</id><content type="html" xml:base="http://localhost:4000/blog/2019/01/10/career-changers-and-impostor-syndrome.html">&lt;p&gt;
  On Tuesday, January 8th of this year, I gave my first formal lightning talk! &lt;a target=&quot;blank&quot; href=&quot;https://devtogether.co/&quot;&gt;Dev Together&lt;/a&gt; put on a lightning talk event (hosted by &lt;a target=&quot;blank&quot; href=&quot;https://about.redshelf.com/&quot;&gt;RedShelf&lt;/a&gt;) around the theme &quot;Your first dev job&quot;. Dev Together posted a &lt;a target=&quot;blank&quot; href=&quot;https://devtogether.co/blog/jan-lightning-talks-recap&quot;&gt;recap of the event&lt;/a&gt;, where you can see videos of all eight talks.
&lt;/p&gt;
&lt;p&gt;
  But for those of you whose learning style gives you a preference for reading information, I’m going to recap my talk here. Enjoy!
&lt;/p&gt;
&lt;h3&gt;A Little about Me&lt;/h3&gt;
&lt;p&gt;
  My name is Christine Zekis, but I go by ‘Tine Zekis…which also happens to be my &lt;a target=&quot;blank&quot; href=&quot;https://twitter.com/tinezekis&quot;&gt;Twitter handle&lt;/a&gt;, for those of you who would like to follow me after you read this. My pronouns are she/her/hers. And as you may have correctly guessed, I am a career changer. In my former life, I was a high school math teacher.
&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;70%&quot; src=&quot;/imgs/profile-pic.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
  I started coding about 4 years ago, and I’m currently working as a mid-level software engineer at an AdTech firm called &lt;a target=&quot;blank&quot; href=&quot;https://www.centro.net/&quot;&gt;Centro&lt;/a&gt; (cough..cough…&lt;a target=&quot;blank&quot; href=&quot;https://www.centro.net/about/careers/&quot;&gt;we’re hiring!&lt;/a&gt;). So, it wasn’t too long ago that I was in the position of looking for my first dev job. And one of the things I remember most vividly from that experience is:
&lt;/p&gt;
&lt;h3&gt;Impostor Syndrome&lt;/h3&gt;
&lt;p&gt;
  Let’s start with a definition I’m paraphrasing from &lt;a target=&quot;blank&quot; href=&quot;https://en.wikipedia.org/wiki/Impostor_syndrome&quot;&gt;Wikipedia&lt;/a&gt;: Impostor Syndrome is a thought pattern where a person diminishes their own accomplishments, largely attributing their successes to luck. This is paired with a fear of being exposed as a “fraud”, or not as capable as they appear to be. Imposter Syndrome can affect all kinds of people at all different stages of their careers. But I think a group that is especially prone to this type of thinking are career changers.
&lt;/p&gt;
&lt;p&gt;
  I say this for a variety of reasons. First, it’s tough to be new, especially if you’ve been somewhere where you were an expert. There are going to be times when you feel like you don’t belong in tech. Maybe some of your colleagues have been coding since high school, and you’ve only been coding for six months!
&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;40%&quot; src=&quot;/imgs/worried-face.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
  These are all legit concerns. But they don’t tell the whole story. So I want to talk about one strategy you can use when you feel Imposter Syndrome sneaking up on you.
&lt;/p&gt;
&lt;h3&gt;Ditch the Deficit Mindset&lt;/h3&gt;
&lt;p&gt;
  Imposter Syndrome feeds off of the deficit mindset. You know, things like: &quot;I’ve never done this;&quot; &quot;I don’t know how to do that;&quot; &quot;Oh my goodness, people are gonna realize I don’t know what the heck I’m doing!&quot; These are the types of thoughts that breed Imposter Syndrome.
&lt;/p&gt;
&lt;p&gt;
  So we’re going to work on ditching the deficit mindset. Let’s stop thinking about what you haven’t done…yet. You bring a wealth of experience no one else on your team has. So think about what your unique talents are. What transferable skills have you honed in your previous experiences? These are the things that will build your confidence, and help you start contributing right away to your team. For example, when I was looking for my first dev job, I thought about what skills I had honed as a math teacher.
&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;60%&quot; src=&quot;/imgs/smiling-office-worker.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
  For instance, I can get up in front of a room full of people and give a &lt;a target=&quot;blank&quot; href=&quot;https://devtogether.co/blog/jan-lightning-talks-recap#tine-zekis&quot;&gt;presentation&lt;/a&gt;. I also bring a passion for social justice, which translates well to working in diversity and inclusion efforts in tech. But probably the most important skill I bring is my ability to teach. So the guy next to me has been coding since high school. Well, I’ve been tutoring math since high school. I can take a concept that most people find scary or intimidating — like deriving the quadratic formula or the limitations of a technology my team is considering — and I can explain it at the level of whomever I’m talking to. Not every engineer can do that…but every good dev team sure could use someone who can. In the interview for my first dev job, I told my future boss that I’m a developer who speaks human.
&lt;/p&gt;
&lt;h3&gt;So, What about You?&lt;/h3&gt;
&lt;p&gt;
  Maybe you’ve worked in sales, and your new dev team is building a tool for the sales team at your company. My &lt;i&gt;goodness&lt;/i&gt;, who better to have in those meetings than you?! You can help your team to understand the needs of your users, since you’re familiar with the day-to-day of a sales team. And you can help explain the technical stuff in a way your colleagues across the table will understand.
&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;80%&quot; src=&quot;/imgs/business-meeting.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
  Okay, so the sales example is awfully specific, and probably doesn’t apply directly to most of you, dear readers. So I’d like you all to take a moment (whether you’re a career changer or not), and think about what specific skills you bring to the table. Take some time to think about your transferable skills. Seriously, do it right now. I’ll give you a moment.
&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
  *                    *                    *
&lt;/p&gt;
&lt;p&gt;
  Perhaps you’re thinking about your experience in customer service, or your excellent communication skills. Maybe you are a musician and you’re great at pattern recognition, or you’ve done work with creative problem-solving. Or maybe your previous work has helped you master the art of persuasion. All of these are invaluable skills to bring to a dev team. Revisit this idea over the next few days and try to come up with one or two unique attributes you can highlight. And if you’re having trouble thinking of anything, consider this:
&lt;/p&gt;
&lt;p&gt;
  Being new is an asset, in and of itself. You’re a pair of fresh eyes on the code. You can ask questions that no one else has thought of because “that’s just how we’ve always done things”. You bring your unique experience and perspective into everything you do.
&lt;/p&gt;
&lt;h3&gt;I’ll Leave You with This&lt;/h3&gt;
&lt;p&gt;
  Awesome dev teams, who know what they’re doing, aren’t just looking for a good fit. They’re looking for a good add. They want someone who brings something to the table that they don’t already have.
&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;80%&quot; src=&quot;/imgs/diverse-business-colleagues.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
  So walk into your interviews knowing that’s you.
&lt;/p&gt;
&lt;p&gt;
  Walk into your first day on the job knowing that’s you.
&lt;/p&gt;
&lt;p&gt;
  Then comes the really hard part: walk into all the other days on the job knowing that’s you.
&lt;/p&gt;
&lt;p&gt;
  If you’re worried this won’t come naturally, I find it’s best to take it at a bit of a strut.
&lt;/p&gt;
&lt;p&gt;&lt;img width=&quot;70%&quot; src=&quot;/imgs/model-strut.gif&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
  *                    *                    *
&lt;/p&gt;
&lt;p&gt;
  If you want to watch the video, check it out below. And if you’d like, you can follow along with my slides &lt;a target=&quot;blank&quot; href=&quot;https://speakerdeck.com/tinezekis/career-changers-and-impostor-syndrome-leveraging-your-unique-strengths&quot;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;iframe width=&quot;250&quot; src=&quot;https://www.youtube.com/embed/8o2tt9dt0Lc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">On Tuesday, January 8th of this year, I gave my first formal lightning talk! Dev Together put on a lightning talk event (hosted by RedShelf) around the theme &quot;Your first dev job&quot;. Dev Together posted a recap of the event, where you can see videos of all eight talks. But for those of you whose learning style gives you a preference for reading information, I’m going to recap my talk here. Enjoy! A Little about Me My name is Christine Zekis, but I go by ‘Tine Zekis…which also happens to be my Twitter handle, for those of you who would like to follow me after you read this. My pronouns are she/her/hers. And as you may have correctly guessed, I am a career changer. In my former life, I was a high school math teacher. I started coding about 4 years ago, and I’m currently working as a mid-level software engineer at an AdTech firm called Centro (cough..cough…we’re hiring!). So, it wasn’t too long ago that I was in the position of looking for my first dev job. And one of the things I remember most vividly from that experience is: Impostor Syndrome Let’s start with a definition I’m paraphrasing from Wikipedia: Impostor Syndrome is a thought pattern where a person diminishes their own accomplishments, largely attributing their successes to luck. This is paired with a fear of being exposed as a “fraud”, or not as capable as they appear to be. Imposter Syndrome can affect all kinds of people at all different stages of their careers. But I think a group that is especially prone to this type of thinking are career changers. I say this for a variety of reasons. First, it’s tough to be new, especially if you’ve been somewhere where you were an expert. There are going to be times when you feel like you don’t belong in tech. Maybe some of your colleagues have been coding since high school, and you’ve only been coding for six months! These are all legit concerns. But they don’t tell the whole story. So I want to talk about one strategy you can use when you feel Imposter Syndrome sneaking up on you. Ditch the Deficit Mindset Imposter Syndrome feeds off of the deficit mindset. You know, things like: &quot;I’ve never done this;&quot; &quot;I don’t know how to do that;&quot; &quot;Oh my goodness, people are gonna realize I don’t know what the heck I’m doing!&quot; These are the types of thoughts that breed Imposter Syndrome. So we’re going to work on ditching the deficit mindset. Let’s stop thinking about what you haven’t done…yet. You bring a wealth of experience no one else on your team has. So think about what your unique talents are. What transferable skills have you honed in your previous experiences? These are the things that will build your confidence, and help you start contributing right away to your team. For example, when I was looking for my first dev job, I thought about what skills I had honed as a math teacher. For instance, I can get up in front of a room full of people and give a presentation. I also bring a passion for social justice, which translates well to working in diversity and inclusion efforts in tech. But probably the most important skill I bring is my ability to teach. So the guy next to me has been coding since high school. Well, I’ve been tutoring math since high school. I can take a concept that most people find scary or intimidating — like deriving the quadratic formula or the limitations of a technology my team is considering — and I can explain it at the level of whomever I’m talking to. Not every engineer can do that…but every good dev team sure could use someone who can. In the interview for my first dev job, I told my future boss that I’m a developer who speaks human. So, What about You? Maybe you’ve worked in sales, and your new dev team is building a tool for the sales team at your company. My goodness, who better to have in those meetings than you?! You can help your team to understand the needs of your users, since you’re familiar with the day-to-day of a sales team. And you can help explain the technical stuff in a way your colleagues across the table will understand. Okay, so the sales example is awfully specific, and probably doesn’t apply directly to most of you, dear readers. So I’d like you all to take a moment (whether you’re a career changer or not), and think about what specific skills you bring to the table. Take some time to think about your transferable skills. Seriously, do it right now. I’ll give you a moment. * * * Perhaps you’re thinking about your experience in customer service, or your excellent communication skills. Maybe you are a musician and you’re great at pattern recognition, or you’ve done work with creative problem-solving. Or maybe your previous work has helped you master the art of persuasion. All of these are invaluable skills to bring to a dev team. Revisit this idea over the next few days and try to come up with one or two unique attributes you can highlight. And if you’re having trouble thinking of anything, consider this: Being new is an asset, in and of itself. You’re a pair of fresh eyes on the code. You can ask questions that no one else has thought of because “that’s just how we’ve always done things”. You bring your unique experience and perspective into everything you do. I’ll Leave You with This Awesome dev teams, who know what they’re doing, aren’t just looking for a good fit. They’re looking for a good add. They want someone who brings something to the table that they don’t already have. So walk into your interviews knowing that’s you. Walk into your first day on the job knowing that’s you. Then comes the really hard part: walk into all the other days on the job knowing that’s you. If you’re worried this won’t come naturally, I find it’s best to take it at a bit of a strut. * * * If you want to watch the video, check it out below. And if you’d like, you can follow along with my slides here.</summary></entry><entry><title type="html">The Most Important Question</title><link href="http://localhost:4000/blog/cultural/2015/06/05/c9-questions.html" rel="alternate" type="text/html" title="The Most Important Question" /><published>2015-06-05T00:00:00-05:00</published><updated>2015-06-05T00:00:00-05:00</updated><id>http://localhost:4000/blog/cultural/2015/06/05/c9-questions</id><content type="html" xml:base="http://localhost:4000/blog/cultural/2015/06/05/c9-questions.html">&lt;h4&gt;Assignment: Cultural Blog | Questions&lt;/h4&gt;

&lt;p&gt;
  For this blog post, I was assigned to research the art of asking good questions in the world of coding. As an educator, I have actually already done a lot of study around asking questions. However, I did find &lt;a target=&quot;_blank&quot; href=&quot;http://stackoverflow.com/help/how-to-ask&quot;&gt;this article&lt;/a&gt; very helpful in formatting a good question online. It is certainly possible to ask a question and never receive an answer, or to receive answers that don't help you understand what you were hoping to. For this reason, it will be important to follow these steps to increase the possibility that your question will be answered in a way that is helpful to your needs:
&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;h4&gt;Research&lt;/h4&gt;
    Hopefully, before you are posting your question online, you have already conducted some kind of search for the information yourself. If you keep track of the information you found in this search, you may be able to help others understand what information you are still missing. You may even want to provide links to related questions that remain unanswered.
  &lt;/li&gt;&lt;br /&gt;
  &lt;li&gt;&lt;h4&gt;Summarize your problem in the title&lt;/h4&gt;
    The people who will potentially respond to your question will be looking at the title to determine whether to keep reading. It is important to make sure that your title is specific enough to draw in someone who has knowledge on the subject. I thought these examples from the &lt;a target=&quot;_blank&quot; href=&quot;http://stackoverflow.com/help/how-to-ask&quot;&gt;stackoverflow&lt;/a&gt; article were excellent, so I stole them:
    &lt;ul&gt;
      &lt;li&gt;&lt;b&gt;Bad: &lt;/b&gt;C# Math Confusion&lt;/li&gt;
      &lt;li&gt;&lt;b&gt;Good: &lt;/b&gt;Why does using float instead of int give me different results when all of my inputs are integers?&lt;/li&gt;
      &lt;li&gt;&lt;b&gt;Bad: &lt;/b&gt;[php] session doubt&lt;/li&gt;
      &lt;li&gt;&lt;b&gt;Good: &lt;/b&gt;How can I redirect users to different pages based on session data in PHP?&lt;/li&gt;
      &lt;li&gt;&lt;b&gt;Bad: &lt;/b&gt;android if else problems&lt;/li&gt;
      &lt;li&gt;&lt;b&gt;Good: &lt;/b&gt;Why does str == &quot;value&quot; evaluate to false when str is set to &quot;value&quot;?&lt;/li&gt;
    &lt;/ul&gt;
    Be sure to include error messages you have come across, key APIs (application program interface), and any unusual situation that makes your question unique from (or similar to) other questions you've seen asked. Also, &lt;b&gt;make sure your spelling, punctuation, and grammar are correct in your title&lt;/b&gt;, since this is the first thing people will see. Finally, if you're having trouble coming up with a summarizing title, you can choose to write this part last; after writing out the longer version, it may become more clear what the focus of your problem should be.
  &lt;/li&gt;&lt;br /&gt;
  &lt;li&gt;&lt;h4&gt;Describe the problem &lt;i&gt;before&lt;/i&gt; displaying any code&lt;/h4&gt;
    Now is the time to expand on the problem introduced in your title. How did you encounter this problem? What difficulties did you run into while trying to solve the problem?
  &lt;/li&gt;&lt;br /&gt;
  &lt;li&gt;&lt;h4&gt;Make it possible for others to reproduce the problem&lt;/h4&gt;
    This is where you can include code if that is where your problem lies. Be sure to only include the relevant code. Readers of your question should be able to reproduce the problem with the code you have provided.
  &lt;/li&gt;&lt;br /&gt;
  &lt;li&gt;&lt;h4&gt;Include all tags that are relevant to your question&lt;/h4&gt;
    The sites that allow you to post coding questions will also have a tagging system you can use to attract users who have knowledge on specific, relevant topics. Make sure you tag the language and API you are using. As you begin adding tags, other related tags may become available. Just make sure that you read the descriptions first if you aren't sure whether they are relevant to your problem. If you want more information on tagging, check out &lt;a target=&quot;_blank&quot; href=&quot;http://stackoverflow.com/help/tagging&quot;&gt;this article&lt;/a&gt;.
  &lt;/li&gt;&lt;br /&gt;
  &lt;li&gt;&lt;h4&gt;Proof-read!&lt;/h4&gt;
    Try to read through your question with fresh eyes. See if you can recreate the problem using only the information provided. Also, make sure you are checking for spelling, punctuation, and grammar before you post.
  &lt;/li&gt;&lt;br /&gt;
  &lt;li&gt;&lt;h4&gt;Post your question and be sure to respond to all feedback&lt;/h4&gt;
    Once you have posted your question, stick around for a bit to see if anyone comments on it. There may be some information missing that people ask for. Try to respond right away by editing the question to include that information. Also, if someone has answered your question, try out their suggestion to see if it works and give them feedback on whether or not it did.
  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
  I hope this has been helpful. Be sure to check in again soon, as I will be revamping the website. I'm also moving into the on-site portion of my program at &lt;a target=&quot;_blank&quot; href=&quot;http://devbootcamp.com/&quot;&gt;Dev Bootcamp&lt;/a&gt; next week, so get excited! Nine weeks from today, you'll be looking at a full-stack developer. Watch out, world!
&lt;/p&gt;
&lt;h4&gt;Resources:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://stackoverflow.com/help/how-to-ask&quot;&gt;How do I ask a good question?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://stackoverflow.com/help/tagging&quot;&gt;What are tags, and how should I use them?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">Assignment: Cultural Blog | Questions</summary></entry><entry><title type="html">Getting Asymptotes with the Big O</title><link href="http://localhost:4000/blog/technical/2015/05/31/t8-tech.html" rel="alternate" type="text/html" title="Getting Asymptotes with the Big O" /><published>2015-05-31T00:00:00-05:00</published><updated>2015-05-31T00:00:00-05:00</updated><id>http://localhost:4000/blog/technical/2015/05/31/t8-tech</id><content type="html" xml:base="http://localhost:4000/blog/technical/2015/05/31/t8-tech.html">&lt;h4&gt;Assignment: Technical Blog&lt;/h4&gt;

&lt;p&gt;
  Let's talk about you and me... Let's talk about all the good things and the bad things that make a method take too long even for a computer! So, let's say we're creating a method for our computer, and we want to know whether our method is efficient. That is to say, if we had a very large input, would the computer be able to return the desired output in a reasonable amount of time? In order to understand the efficiency of a method, let us explore the example of looking up a name in a phone book:
&lt;/p&gt;
&lt;h4&gt;Start from the Very Beginning: My Nanny Says It's the Very Best Place to Start&lt;/h4&gt;
&lt;p&gt;
  Let's say we want to find the phone number for Christine Onayemi in a phone book. For those of you who grew up with the Internet, a phone book is a large book containing listings in alphabetical order by last name, then by first name or initial. Each name then has a phone number and possible a street address. So, if we want to find Christine Onayemi, we would flip to the &lt;b&gt;O&lt;/b&gt; section. But how would we tell out computer how to &quot;flip&quot; to a particular page? Instead, we could ask it to take each name and see if the last name starts with an &quot;O&quot;. If not, then it goes on to the next name. And the next. Finally, when we get to a name that does start with &quot;O&quot;, we need to check whether the second letter is &quot;N&quot;, and so on until we have matched the last name. Then we need to look through the &quot;Onayemi&quot;s to find one whose first name starts with &quot;C&quot;, and so on. As you can imagine, if this is a large phone book, this method will take a lot of time. So let's see if we can make this search more efficient.
&lt;/p&gt;
&lt;h4&gt;Start in the Middle and Go from There&lt;/h4&gt;
&lt;p&gt;
  If we have a phone book of, say, 1,000,000 names, then we can instruct our method to start at the halfway mark. So, we look at the name that is 500,000 in from the beginning and compare this name to &quot;Onayemi&quot;. If this name happens to be &quot;Onayemi, Christine&quot;, then we're done...how lucky! But in the much more likely case that this is not the end of our search, we will use what is called a binary search method to continue. If &quot;Onayemi&quot; comes after our halfway-point name alphabetically, then we move on to the three-fourths mark (half of the second half); if &quot;Onayemi&quot; comes before this name, we look at one-fourth (half of the first half). We continue to halve segments until we get to the name we are looking for. Believe it or not, using this method, in a list of 1,000,000 people, we will only need to halve a segment a maximum of 20 times before we are certain to find the name we are looking for. It seems this method is much more efficient than the first!
&lt;/p&gt;
&lt;p&gt;
  So, if there are several ways to solve the same problem, how can we compare them to determine which is the most efficient? Enter: the big O.
&lt;/p&gt;
&lt;h3&gt;Big O Complexity and Notation&lt;/h3&gt;
&lt;p&gt;
  Mathematically speaking, each time we ask a computer to carry out a method, we are initiating an algorithm. The complexity of that algorithm will determine the run-time of the method. In order to compare algorithm complexities, big O notation was developed. With big O notation we express the runtime in terms of &lt;b&gt;&quot;how quickly it grows relative to the input, as the input gets arbitrarily large&quot;&lt;/b&gt; (Parker Phinney, &lt;a target=&quot;_blank&quot; href=&quot;https://www.interviewcake.com/big-o-notation-time-and-space-complexity&quot;&gt;Interview Cake&lt;/a&gt;). We cannot predict runtime exactly, since there are factors we cannot take into account, such as the processor's speed or whether the computer is running other programs simultaneously. Instead, we think of runtime in terms of how quickly it grows as our inputs get bigger and bigger. For big O notation, we will call our input size &lt;i&gt;n&lt;/i&gt;. We say that our runtime grows &quot;on the order of the size of the input&quot; [&lt;b&gt;O(&lt;i&gt;n&lt;/i&gt;)&lt;/b&gt;], or &quot;on the order of the square of the size of the input [&lt;b&gt;O(&lt;i&gt;n&lt;/i&gt;&lt;sup&gt;2&lt;/sup&gt;)&lt;/b&gt;], etc. In fact, the &quot;O&quot; in big O stands for &quot;order&quot;. It will be important to note, that we are only interested in the highest power (order) of &lt;i&gt;n&lt;/i&gt;, since these will grow the fastest as our input becomes huge. As we approach this huge input, we will also approach some value for our big O notation. This is why &quot;big O analysis&quot; is sometimes referred to as &quot;asymptotic analysis&quot;. Hopefully this will become more clear with some examples, so let's get to it!
&lt;/p&gt;
&lt;h3&gt;Big O Notation Examples&lt;/h3&gt;
&lt;h4&gt;Addition Algorithm: Linear Complexity&lt;/h4&gt;
&lt;p&gt;
  Let's discuss the algorithm for adding two, multi-digit numbers together. Generally, when we add such numbers, we can line them up by place value and begin to add corresponding pairs of digits from right to left. If a sum for any digit pair is greater than 9, we will carry over the digit in the tens place and add it to the next pair of digits. Using this algorithm, if we are adding two 6-digit numbers, then we will have to add six pairs of digits, and possibly carry a seventh. We will assume that the act of adding is more costly to the runtime than the carrying, so the number of pairs to add will be our focus. If we add two 100-digit numbers together, then we need to compute 100 additions. For two 10,000-digit numbers, we must compute 10,000 additions. In this case, the &lt;b&gt;complexity&lt;/b&gt; of our algorithm is directly proportional to the number of digits, which we will call &lt;i&gt;n&lt;/i&gt;. This is called &lt;b&gt;O(&lt;i&gt;n&lt;/i&gt;)&lt;/b&gt;, or &lt;b&gt;linear complexity&lt;/b&gt;. The algorithm for subtraction would create a similar result, only we will need to borrow rather than carry digits.
&lt;/p&gt;
&lt;h4&gt;Multiplication Algorithm: Quadratic Complexity&lt;/h4&gt;
&lt;p&gt;
  Now let's talk about how we would multiply two, multi-digit numbers. We will line the numbers up in a similar fashion by place value. However, this time, we take each digit from the bottom number and multiply it with each digit in the top number (again, carrying digits beyond the ones place). We repeat this for each digit of the bottom number. So, when multiplying two 6-digit numbers, we need to calculate 36 multiplications! There will also be addition of the resulting numbers, but in this case, our multiplication will grow our runtime at a faster rate, so we do not bother ourselves with details regarding addition. If we multiply two 100-digit numbers, we must calculate 10,000 multiplications. Since this algorithm scales with &lt;i&gt;n&lt;/i&gt;&lt;sup&gt;2&lt;/sup&gt;, we say that it is &lt;b&gt;O(&lt;i&gt;n&lt;/i&gt;&lt;sup&gt;2&lt;/sup&gt;)&lt;/b&gt;, or &lt;b&gt;quadratic complexity&lt;/b&gt;.
&lt;/p&gt;
&lt;h4&gt;The Traveling Salesman&lt;/h4&gt;
&lt;p&gt;
  A common problem in the world of computer science is that of the &lt;b&gt;Traveling Salesman&lt;/b&gt;: There are &lt;i&gt;n&lt;/i&gt; number of towns, and each is linked to one or more other towns by a road of a particular distance. The Traveling Salesman must find the shortest route that allows him to visit each town.
&lt;/p&gt;
&lt;p&gt;
  Okay, this isn't so bad...let's say there are three towns: A, B, and C. If there is a road between all pairs, then the salesman's options are limited to the following:
  &lt;ul&gt;
    &lt;li&gt;A → B → C&lt;/li&gt;
    &lt;li&gt;A → C → B&lt;/li&gt;
    &lt;li&gt;B → C → A&lt;/li&gt;
    &lt;li&gt;B → A → C&lt;/li&gt;
    &lt;li&gt;C → A → B&lt;/li&gt;
    &lt;li&gt;C → B → A&lt;/li&gt;
  &lt;/ul&gt;
  And since (A → B → C) and (C → B → A) are really the same paths (just in reverse), one member of each reversed pair can be eliminated. Thus, there are only 3 possibilities for our salesman. No problem!
&lt;/p&gt;
&lt;p&gt;
  But what happens when we increase &lt;i&gt;n&lt;/i&gt; (the number of towns)? With 4 towns, we get 12 possibilities, 5 towns give 60, 6 towns give 360. We can calculate the number of possibilities by taking half of the factorial of &lt;i&gt;n&lt;/i&gt;.
  &lt;ul&gt;
    &lt;li&gt;3! / 2 = 3 * 2 * 1 / 2 = 6 / 2 = 3&lt;/li&gt;
    &lt;li&gt;4! / 2 = 4 * 3 * 2 * 1 / 2 = 24 / 2 = 12&lt;/li&gt;
    &lt;li&gt;5! / 2 = 5 * 4 * 3 * 2 * 1 / 2 = 120 / 2 = 60&lt;/li&gt;
    &lt;li&gt;6! / 2 = 6 * 5 * 4 * 3 * 2 * 1 / 2 = 720 / 2 = 360&lt;/li&gt;
    &lt;li&gt;...&lt;/li&gt;
    &lt;li&gt;25! / 2 = 25 * 24 * … * 2 * 1 / 2 = 15,511,210,043,330,985,984,000,000 / 2 = 7,755,605,021,665,492,992,000,000&lt;/li&gt;
  &lt;/ul&gt;
  &lt;b&gt;By the time we get to only 200 towns, we no longer have enough time in the universe to solve this problem with traditional computers!&lt;/b&gt;
&lt;/p&gt;
&lt;h4&gt;Naming Complexities&lt;/h4&gt;
&lt;p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;b&gt;Constant Complexity: O(1)&lt;/b&gt; - 1 item takes 1 second, 10 items takes 1 second, 100 items takes 1 second. The input size does not impact the runtime as it grows.&lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Linear Complexity: O(&lt;i&gt;n&lt;/i&gt;)&lt;/b&gt; - 1 item takes 1 second, 10 items takes 10 seconds, 100 items takes 100 seconds. The input and runtime have a linear relationship; as one increases by a factor of 10, so does the other.&lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Quadratic Complexity: O(&lt;i&gt;n&lt;/i&gt;&lt;sup&gt;2&lt;/sup&gt;)&lt;/b&gt; - i item takes 1 second, 10 items takes 100 seconds, 100 items takes 10,000 seconds. The runtime grows with the square of the input.&lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Polynomial Complexity: O(&lt;i&gt;n&lt;/i&gt;&lt;sup&gt;a&lt;/sup&gt;)&lt;/b&gt; - Any complexity that can be written in this form has a polynomial complexity, or is solvable in &lt;b&gt;polynomial time&lt;/b&gt;.&lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Logarithmic Complexity: O(log &lt;i&gt;n&lt;/i&gt;)&lt;/b&gt; - 1 item takes 1 second, 10 items takes 2 seconds, 100 items takes 3 seconds, 1,000 items takes 4 seconds, etc. The number of seconds is the exponent in this relationship, or more precisely, the runtime grows with the log of the input.&lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Factorial Complexity: O(&lt;i&gt;n&lt;/i&gt;!)&lt;/b&gt; - The runtime grows with the factorial calculation of the input (see the Traveling Salesman example above).&lt;/li&gt;
  &lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;
  Well, I hope this has been helpful in your understanding of big O complexities and notation, as well as how we determine the efficiency of a method. Please stay tuned as I continue to blog about my learnings at &lt;a target=&quot;_blank&quot; href=&quot;http://devbootcamp.com/&quot;&gt;Dev Bootcamp&lt;/a&gt;. I'm coming up on my last week before the on-site portion of the program, so get excited!
&lt;/p&gt;
&lt;h4&gt;Resources:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://stackoverflow.com/questions/487258/plain-english-explanation-of-big-o&quot;&gt;Plain English Explanation of Big O&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.interviewcake.com/big-o-notation-time-and-space-complexity&quot;&gt;Big O Notation: Using Not-Boring Math to Measure Code's Efficiency&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">Assignment: Technical Blog</summary></entry><entry><title type="html">Lost in America</title><link href="http://localhost:4000/blog/cultural/2015/05/31/c8-conflict.html" rel="alternate" type="text/html" title="Lost in America" /><published>2015-05-31T00:00:00-05:00</published><updated>2015-05-31T00:00:00-05:00</updated><id>http://localhost:4000/blog/cultural/2015/05/31/c8-conflict</id><content type="html" xml:base="http://localhost:4000/blog/cultural/2015/05/31/c8-conflict.html">&lt;h4&gt;Assignment: Cultural Blog | Conflict&lt;/h4&gt;

&lt;p&gt;
  I've heard that the way we analyze conflicts (both major and minor) in life can be comparable to the way we analyze problems in our code. If we look at the overall problem, we can get swept up in the overall result, anger or frustration in the case of a conflict, unknown broken code in the case of our programming. But if we look deeper at the source of the conflict, or narrow down which pieces of code are or are not working, we can begin to problem-solve. In the name of further exploration of this notion, I will analyze a conflict from my childhood.
&lt;/p&gt;
&lt;p&gt;
  When I was in high school, shortly after receiving my driver's license, I drove some friends to a mall further out into the suburbs than I had previously driven without a parent. I didn't know the way, but my friends told me they could direct me. (Mind you, kids, this was before smart phones with GoogleMaps, or wide-spread cell phone use of any kind.) We went to the mall, had our fun, and on the way out, I wasn't sure which way to turn. A friend said that if I made a left out of the lot at the light, then I would be on 22nd, a road I knew would take me to a familiar route home. However, when we turned, I saw that the street sign said something else. When I asked about this, my friend said, &quot;Oh, well, this turns into 22nd later.&quot; I continued, hoping my friend was right. More time passed than I was comfortable with, but embarrassed that I didn't know the way myself, I said nothing. Eventually, when the road had still not turned into anything familiar, I said something. Long story short, we ended up calling our parents from a pay phone in the next state over before we had clear instructions on how to get home. I was livid. And my brother made fun of me for literally 10 years (until he did something equally, if not more, embarrassing).
&lt;/p&gt;
&lt;p&gt;
  If I analyze my emotions further, I was not just angry with my friends for having the instructions wrong, but I was also angry with myself for not knowing where I was going. Why had I trusted people whose navigation skills I knew nothing about? Why hadn't I looked up directions beforehand and gotten the feel for a map of the area on my own? Why didn't I say anything as soon as things started to feel off? By the end of the evening, my friends and I were all yelling at each other. I also realize now that anger wasn't the only emotion I was feeling. Part of yelling at them, showing my anger, was to hide the other underlying emotion: fear. Where were we? What if we never figured out how to make it home? What if something terrible happened to us and no one knew where we were?
&lt;/p&gt;
&lt;p&gt;
  Eventually, we had to work together to figure out where we were so we could describe it to a parent on the phone. Additionally, we had to work out whose parents would be the most likely to be helpful and not just completely worried and/or angry themselves. We also had to provide phone numbers to those parents so they could let the other parents know what was going on. We learned a lot that night. We also tried tracing our journey on a map later, and my sense of local geography had never been better.
&lt;/p&gt;
&lt;p&gt;
  But on a more personal note, &lt;i&gt;I&lt;/i&gt; learned a lot that night about myself and how I deal with others. I learned that I need to be self-reliant, first and foremost, when it comes to my own safety. For instance, even after getting an iPhone, I still look up directions before I go to a new place and make sure that I have a general understanding of where I'm going and how to get back. Also, when I am feeling uncomfortable in a situation, especially with close friends, I speak up. I have learned to trust my intuition, rather than worrying about seeming stupid or unsure.
&lt;/p&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">Assignment: Cultural Blog | Conflict</summary></entry><entry><title type="html">It’s All about Me</title><link href="http://localhost:4000/blog/cultural/2015/05/25/c7-values.html" rel="alternate" type="text/html" title="It's All about Me" /><published>2015-05-25T00:00:00-05:00</published><updated>2015-05-25T00:00:00-05:00</updated><id>http://localhost:4000/blog/cultural/2015/05/25/c7-values</id><content type="html" xml:base="http://localhost:4000/blog/cultural/2015/05/25/c7-values.html">&lt;h4&gt;Assignment: Cultural Blog | Values&lt;/h4&gt;

&lt;p&gt;
  In &lt;a target=&quot;_blank&quot; href=&quot;http://tinezekis.github.io/blog/cultural/2015/05/18/c6-stereotype-threat.html&quot;&gt;last week's cultural blog post&lt;/a&gt;, we discussed Stereotype Threat and its potential to ... One potential tool for battling Stereotype Threat is to &lt;a target=&quot;_blank&quot; href=&quot;http://www.reducingstereotypethreat.org/reduce.html#encouragingself&quot;&gt;encourage self-affirmation&lt;/a&gt; in those at risk. So, as we approach the on-site portion of the Dev Bootcamp program, we have been asked to engage in a self-affirmation activity related to exploring our values.
&lt;/p&gt;
&lt;p&gt;
  After sifting through an extensive list of values and ranking their importance in my own life, I have decided to focus on personal growth/development. For the last five and a half years, I have made an explicit effort to keep this value at the forefront of my mind and to have it guide my day-to-day actions and long-term life goals. Along with some close friends, I have defined what kind of &quot;grown-up&quot; I want to be. It is not an end goal, but rather a life-long journey of self improvement. Each year, we make year-long goals that will help us to move forward along this journey. And each month, we get together to review the previous month, re-examine our year-long goals, and create goals for the upcoming month. This has given me a sense of accountability to make sure that I am always working actively on improving myself.
&lt;/p&gt;
&lt;p&gt;
  People have often asked me about my weight loss secret, as I have lost almost 30 pounds in the last year and a half. They are usually quite disappointed when I say that I did it with hard work: changing my eating and exercise habits a little bit at a time. They usually want to hear that I took some pill or joined some program that made it easy, and fast. It's not fast. When I lose weight fast, I gain it even faster. This last one has been a mission to lose weight slowly, intentionally. My goal is to lose 20 pounds each year for 3 years. And each month, I evaluate how I'm doing and what small, attainable changes I can make. I found that I can take this approach in almost everything I do.
&lt;/p&gt;
&lt;p&gt;
  I can definitely see myself using this value as a combatant to Stereotype Threat. The thought that as a black woman, I might not be as good as others at coding is ridiculous to me. Since I am constantly working to improve myself, I have records of an incredible list of accomplishments. I know that, while in the real world, it may seem like I am in competition with others, the only competition I truly value is that with myself. And I am just trying to be a better me today than I was yesterday. That much, I can do.
&lt;/p&gt;
&lt;h4&gt;Resources:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.reducingstereotypethreat.org/reduce.html#encouragingself&quot;&gt;ReducingStereotypeThreat.org: What Can Be Done to Reduce Stereotype Threat? - Encouraging Self-Affirmation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">Assignment: Cultural Blog | Values</summary></entry><entry><title type="html">Lost in Translation?</title><link href="http://localhost:4000/blog/technical/2015/05/24/t7-JavaScript.html" rel="alternate" type="text/html" title="Lost in Translation?" /><published>2015-05-24T00:00:00-05:00</published><updated>2015-05-24T00:00:00-05:00</updated><id>http://localhost:4000/blog/technical/2015/05/24/t7-JavaScript</id><content type="html" xml:base="http://localhost:4000/blog/technical/2015/05/24/t7-JavaScript.html">&lt;h4&gt;Assignment: Technical Blog | JavaScript&lt;/h4&gt;

&lt;p&gt;
  This week at Dev Bootcamp, we started learning a new language: JavaScript. There are many similarities between JavaScript and Ruby, as well as many important differences. As with the study of any two languages, it is important to understand which pieces can be translated literally, and which pieces run the risk of getting lost in translation. In order to explore some of these further, we will focus on just one concept in each language. In this post, we will discuss Ruby Hashes and JavaScript Objects.
&lt;/p&gt;
&lt;h3&gt;Ruby Hashes&lt;/h3&gt;
&lt;p&gt;
  In Ruby, a hash is a data-storage class. It is similar to an array in that it can store multiple items. However, unlike in the array, the order of these items is unimportant. This means that we do not reference items within a hash by their ordinal location. Instead, all items in a hash are arranged into key/value pairs. Each key points to a corresponding value. For example, if I wanted to keep track of abbreviations for elements of the periodic table, I could create a hash. Each element would be a key with its corresponding abbreviation as the value:
  &lt;pre&gt;&lt;code&gt;periodic_abbrevs = {&quot;Hydrogen&quot; =&amp;gt; &quot;H&quot;, &quot;Oxygen&quot; =&amp;gt; &quot;O&quot;, &quot;Carbon&quot; =&amp;gt; &quot;C&quot;, &quot;Zinc&quot; =&amp;gt; &quot;Zn&quot;,&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;code&gt;  &quot;Gold&quot; =&amp;gt; &quot;Au&quot;, &quot;Copper&quot; =&amp;gt; &quot;Cu&quot;, &quot;Magnesium&quot; =&amp;gt; &quot;Mg&quot;}&lt;/code&gt;&lt;/pre&gt;
  For all you science buffs out there, you have probably noticed that the elements in this hash are not presented in order according to the periodic table. This does not matter, as for our purposes, we will only need to access an abbreviation (value) by it's element name (key), not by where it falls on the table of elements. If we want to print to the console the abbreviation for Gold, we can do so thusly:
  &lt;pre&gt;&lt;code&gt;puts periodic_abbrevs[&quot;Gold&quot;]&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;samp&gt;=&amp;gt; Au&lt;/samp&gt;&lt;/pre&gt;
  You have probably also noticed that our hash is not exhaustive. There are still many more elements in the periodic table. Fortunately, we can easily add or remove key/value pairs to a hash. If we want our hash to include phosphorus, for instance, here's how we add it:
  &lt;pre&gt;&lt;code&gt;periodic_abbrevs[&quot;Phosphorus&quot;] = &quot;P&quot;&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;samp&gt;=&amp;gt; {&quot;Hydrogen&quot; =&amp;gt; &quot;H&quot;, &quot;Oxygen&quot; =&amp;gt; &quot;O&quot;, &quot;Carbon&quot; =&amp;gt; &quot;C&quot;, &quot;Zinc&quot; =&amp;gt; &quot;Zn&quot;, &quot;Gold&quot; =&amp;gt; &quot;Au&quot;,&lt;/samp&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;samp&gt;     &quot;Copper&quot; =&amp;gt; &quot;Cu&quot;, &quot;Magnesium&quot; =&amp;gt; &quot;Mg&quot;, &quot;Phosphorus&quot; =&amp;gt; &quot;P&quot;}&lt;/samp&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
  A hash is like an algebraic function in that multiple keys may point to equivalent values, but a single key cannot point to more than one value. In other words, each input must have only one output. To give another example, let's say that we are keeping track of the ages of children at a daycare. The following hash would work just fine:
  &lt;pre&gt;&lt;code&gt;ages = {sarah: 3, johnny: 4, mary: 4, andy: 3, henry: 4, sally: 3}&lt;/code&gt;&lt;/pre&gt;
  It is perfectly alright for several of these children to be the same age; their name keys can point to equivalent values. However, we cannot have one name point to two different ages:
  &lt;pre&gt;&lt;code&gt;ages = {sarah: 3, sarah: 4, johnny: 4 ... etc.} &lt;/code&gt;&lt;samp&gt;# unacceptable hash&lt;/samp&gt;&lt;/pre&gt;
  If there are really two Sarahs at this daycare, then they must have different names for their keys. Perhaps &lt;code&gt;sarah_jones&lt;/code&gt; and &lt;code&gt;sarah_smith&lt;/code&gt;. Otherwise, how can the program know which value to access for that key? Please note that if you add an existing key to a hash, it will overwrite the existing key/value pair, replacing the previous value with the new one.
&lt;/p&gt;
&lt;h3&gt;JavaScript Objects&lt;/h3&gt;
&lt;p&gt;
  In JavaScript, an object is a wrapped collection of properties. Perhaps we have several musicians which each have a name, instrument, and genre. We would store this information into various &lt;code&gt;Musician&lt;/code&gt; objects thusly:
  &lt;pre&gt;&lt;code&gt;function Musician(name, instrument, genre) {&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;code&gt;  this.name = name;&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;code&gt;  this.instrument = instrument;&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;code&gt;  this.genre = genre;&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;code&gt;}&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;code&gt;var yoYoMa = new Musician(&quot;Yo-Yo Ma&quot;, &quot;cello&quot;, &quot;Classical&quot;)&lt;/code&gt;&lt;/pre&gt;
  Later, if I need to access the instrument Yo-Yo Ma plays, I can simply call for his instrument property:
  &lt;pre&gt;&lt;code&gt;yoYoMa.instrument;&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;samp&gt;=&amp;gt; cello&lt;/samp&gt;&lt;/pre&gt;
  Additionally, I can add and remove properties from an object. For instance, we can add a famous Yo-Yo Ma quote to the &lt;code&gt;yoYoMa&lt;/code&gt; object thusly:
  &lt;pre&gt;&lt;code&gt;yoYoMa.quote = &quot;I think one of the great things about being a musician&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;code&gt;  is that you never stop learning.&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;h3&gt;Key Points for Translation&lt;/h3&gt;
&lt;p&gt;
  As you have likely noticed, hashes in Ruby and objects in JavaScript have many similarities. The properties of an object have names and associated values, much like the key/value pairs of a hash. We can access these values at any time by referencing their names or keys. We can also add and remove properties or key/value pairs. So, if I were translating a hash from Ruby into JavaScript, I would likely use an object. But be careful, because these two things are not identical!
&lt;/p&gt;
&lt;p&gt;
  First, as we have seen from our examples, we do not construct these things in the same way in the two languages. The syntax is quite different. Additionally, Ruby and JavaScript have multiple ways to create and build onto hashes and objects, respectively. Trying to use the syntax of one in the other language would create several errors.
&lt;/p&gt;
&lt;p&gt;
  Another word of caution has to do with the English language. In Ruby, there are also such things as objects, and they can be quite different from hashes. In fact, a hash is just one type of &lt;i&gt;infinitely many&lt;/i&gt; objects in Ruby, since we can invent our own classes to create new types of objects all the time. So, while it is important to note these similarities for ease of understanding, we must not be too quick to equate them.
&lt;/p&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">Assignment: Technical Blog | JavaScript</summary></entry><entry><title type="html">Confirming the Stereotypes</title><link href="http://localhost:4000/blog/cultural/2015/05/18/c6-stereotype-threat.html" rel="alternate" type="text/html" title="Confirming the Stereotypes" /><published>2015-05-18T00:00:00-05:00</published><updated>2015-05-18T00:00:00-05:00</updated><id>http://localhost:4000/blog/cultural/2015/05/18/c6-stereotype-threat</id><content type="html" xml:base="http://localhost:4000/blog/cultural/2015/05/18/c6-stereotype-threat.html">&lt;h4&gt;Assignment: Cultural Blog | Stereotype Threat&lt;/h4&gt;

&lt;p&gt;I remember I was in middle school when my father explained to me that, “Some stereotypes are just true.” The example he gave was that Nigerians are loud. When I consider my Nigerian relatives, this generally holds true. “We are a lout people,” he said. And my goodness, we get even louder when we’re together! Obviously, I have met some very quiet Nigerians in my life. But this stereotype, this understanding, that Nigerians are loud has stuck with me my whole life. To this day, I often attempt to censor myself by stifling my laughter; I feel self-conscious laughing aloud in public. I know that the typical American is not thinking about loud Nigerians on a day-to-day basis (nor do people usually know that I am Nigerian without some instruction from me on the matter). But I know that African Americans are also considered to be “a loud people”. And I feel weird confirming this stereotype when I throw my head back and cackle loudly in public, though it is in my nature to do so.&lt;/p&gt;

&lt;h3&gt;What Is Stereotype Threat?&lt;/h3&gt;

&lt;p&gt;I have noticed that perceptions of me in the workplace are often that I am quiet and polite, perhaps even shy. My close friends would have a hard time imagining this, since I am anything but quiet with them. But when my job depends on perceptions of my behavior, I tend to exercise extreme caution. As a woman, I try not to express too many emotions at work, for fear that people will think I’m “overly emotional”, or worse: PMS-ing. My coworkers will generally not know what issues I am passionate about, lest I come across like an angry, Black woman. And for heaven’s sake, I try not to engage in conversations about race. Between Ferguson, Baltimore, and the weekly gun deaths in Chicago (according to Chicago Sun-Times, &lt;a target=&quot;_blank&quot; href=&quot;http://chicago.suntimes.com/crime/7/71/615044/2-dead-47-wounded-chicago-weekend-gun-violence&quot;&gt;2 people died and 47 were injured&lt;/a&gt; this weekend alone), I can hardly have a conversation without “letting my Black out” and disrupting everyone’s day.&lt;/p&gt;

&lt;p&gt;I often think of how the great Wanda Sykes described the experience of Dignified Black People. I can relate to her stand-up bit on this so well that I thought it would help your understanding of my own experience if you watch it for yourself. &lt;b&gt;Warning: This video contains adult language.&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;iframe width=&quot;100%&quot; src=&quot;https://www.youtube.com/embed/tls6qgQ90Bc&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/pre&gt;

&lt;p&gt;This fear of confirming negative stereotypes is called &lt;a target=&quot;_blank&quot; href=&quot;http://www.reducingstereotypethreat.org/definition.html&quot;&gt;Stereotype Threat&lt;/a&gt;. For two decades, Dr. Claude Steele and other psychology researchers have studied this phenomenon and its impact on performance. It turns out, when race is emphasized, Black students do worse on standardized tests than their White counterparts; but when race is not discussed, Black students and White students perform comparably. Similarly, if a bunch of students are told that a test is designed to see how gender affects math ability, girls will perform worse than their male classmates. But without this prompt, girls and boys perform at the same level.&lt;/p&gt;

&lt;p&gt;As Steele discusses in his most recent book, &lt;a target=&quot;_blank&quot; href=&quot;http://www.amazon.com/Whistling-Vivaldi-Stereotypes-Affect-Issues/dp/0393339726&quot;&gt;&lt;i&gt;Whistling Vivaldi: How Stereotypes Affect Us and What We Can Do&lt;/i&gt;&lt;/a&gt;, the effects of Stereotype Threat only increase in high-achieving individuals. Apparently, the higher the perceived stakes, the more one has dedicated to the endeavor, the more averse their reaction to the notion that the stereotype might actually be right. For a female Math major, it would be devastating to discover that she is actually incapable of comprehending higher-level mathematics. Plus, as she gets deeper into the field, the diversity of her peers continues to shrink, further alluding to the notion that she does not belong there. And the more heavily these factors weigh on her mind, the more she has to contend with while completing important tasks like taking an exam or speaking up in class. The worst impact of the Stereotype Threat is that it becomes a self-fulfilling prophecy. And if that female Math major succumbs to the pressure, fails her exam and changes majors, the next female Math major who comes along will miss out on what could have been a role model to look to.&lt;/p&gt;

&lt;p&gt;I don’t think I will have time here to discuss the intersectionality that comes with being a Black woman, but suffice it to say that these issues come up constantly.&lt;/p&gt;

&lt;h3&gt;How Do We Combat the Effects of Stereotype Threat?&lt;/h3&gt;

&lt;p&gt;So how, you may be wondering, do I even function under all of this daily pressure of being a Black woman in mathematics? Well, fortunately for middle-school-aged ‘Tine, my father had also told me something back when I was in second grade: “Everyone in my family goes to college.” There may be some negative stereotypes about Nigerians, or about Black people in general, but the stereotype about Onayemis is that we are intellectuals, professionals, and respected community leaders. And I try to confirm these stereotypes every day, both in how I conduct myself, and in how I encourage my nieces and nephews to behave.&lt;/p&gt;

&lt;p&gt;As a Black girl whose favorite subject was math ever since “1 + 1 = 2”, I grew up very aware of the types of studies that Dr. Steele spearheaded. I remember reading about them in high school, as a member of the &lt;a target=&quot;_blank&quot; href=&quot;http://msan.wceruw.org/&quot;&gt;Minority Student Achievement Network&lt;/a&gt; (MSAN). We met with high-achieving Black and Latino students from across the country to discuss the Achievement Gap and possible ways to close it. Unfortunately, after returning to my high school as a teacher, I can see that little has been accomplished in that endeavor. You can still tell what level a class is by the color of the students.&lt;/p&gt;

&lt;p&gt;To be completely honest, if I knew the answer to combatting Stereotype Threat on a large scale, I would not be changing fields right now. I would be continuing in education, closing the Achievement Gap, and saving the world. However, on a personal level, I have found that the more I identify myself as a unique individual, the less fear I have about this issue. Unfortunately, one way that I know I’m doing a good job is that people will slip up and say something to indicate that they have forgotten my race or gender altogether. When someone makes a sweeping generalization about Black people and responds to my side-eye by saying, “Well, not you. You’re not &lt;i&gt;really&lt;/i&gt; Black,” I know that I have succeeding in not confirming the stereotype. This does not mean that the person has disregarded the stereotype as being inaccurate; they have just moved me into the category of an exception. When I am treated like “one of the guys”, I know that I am not perceived as an overly-emotional woman; but now I will likely have to sit through some upsettingly vulgar jokes that men usually wouldn’t tell in “mixed company”.&lt;/p&gt;

&lt;p&gt;It’s kind of a mixed bag, because I like being a Black woman. But I end up feeling obligated to prove how much I don’t fit into that category…which makes me angry. And then I end up confirming the stereotype anyway: another angry Black woman, ranting and raving about something or another. Perhaps I should just embrace it. I may be a loud, angry Black woman, but I’m really good at math…and I’m getting pretty good at coding too, so watch out!&lt;/p&gt;

&lt;h4&gt;Resources:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://chicago.suntimes.com/crime/7/71/615044/2-dead-47-wounded-chicago-weekend-gun-violence&quot;&gt;Chicago Sun-Times: 2 dead, 47 wounded in Chicago weekend gun violence&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.npr.org/templates/story/story.php?storyId=125859207&quot;&gt;NPR - Talk of the Nation: 'Whistling Vivaldi' and Beating Stereotypes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.reducingstereotypethreat.org/definition.html&quot;&gt;ReducingStereotypeThreat.org: What Is Stereotype Threat?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.youtube.com/watch?v=tls6qgQ90Bc&quot;&gt;YouTube - Wanda Sykes: Dignified Black People&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">Assignment: Cultural Blog | Stereotype Threat</summary></entry><entry><title type="html">Acting as Individuals and as a Group</title><link href="http://localhost:4000/blog/technical/2015/05/17/t6-oop-concepts.html" rel="alternate" type="text/html" title="Acting as Individuals and as a Group" /><published>2015-05-17T00:00:00-05:00</published><updated>2015-05-17T00:00:00-05:00</updated><id>http://localhost:4000/blog/technical/2015/05/17/t6-oop-concepts</id><content type="html" xml:base="http://localhost:4000/blog/technical/2015/05/17/t6-oop-concepts.html">&lt;h4&gt;Assignment: Technical Blog | Object-Oriented Programming&lt;/h4&gt;

&lt;p&gt;
  When we create a class in Ruby, we are able to create several instances of that class (objects). As we have discussed in &lt;a target=&quot;_blank&quot; href=&quot;/blog/technical/2015/05/10/t5-ruby-classes.html&quot;&gt;a previous post&lt;/a&gt;, objects, or instances of a class, are the nouns of an Object-Oriented Programming (OOP) language. And if the objects are the nouns, then methods are the verbs. Methods, are the focus of this post: we will discuss the difference between instance methods and class methods.
&lt;/p&gt;
&lt;p&gt;
  As you may have guessed, instance methods get performed on an individual instance of the class, whereas class methods are performed on all instances of the class (the class as a whole). In order to illustrate this difference, let us consider the example of a &lt;code&gt;Car&lt;/code&gt; class. Each &lt;code&gt;car&lt;/code&gt;, an instance of the &lt;code&gt;Car&lt;/code&gt; class, will have its own attributes, which are called instance variables. Let us say that our instances are distinguished by make, model, color, and year:
  &lt;pre&gt;&lt;img width=&quot;100%&quot; src=&quot;/imgs/car-class-1.png&quot; /&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
  My first car was an emerald green '98 Honda Accord. I loved that car. So in honor of her, we will name our instance &lt;code&gt;my_first_car&lt;/code&gt;. My current car is a black '99 Honda Civic. It is much less accomplished, but it deserves its own instance nonetheless, I suppose. So here are out two instances:
  &lt;pre&gt;&lt;img width=&quot;100%&quot; src=&quot;/imgs/car-class-2.png&quot; /&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
  So now that we have a couple of cars to talk about, let's have them do things. First, let's create a couple of methods: one that will drive the car, and one that will tell us the mileage on each car. What kind of methods do you think we'll need for these tasks? Well, the mileage will not be the same for both cars, and we certainly won't be driving them in one go. So each instance of the &lt;code&gt;Car&lt;/code&gt; class will need to perform these methods for itself. Thus, we will need &lt;i&gt;instance&lt;/i&gt; methods:
  &lt;pre&gt;&lt;img width=&quot;100%&quot; src=&quot;/imgs/car-class-3.png&quot; /&gt;&lt;/pre&gt;
  In this case, calling the &lt;code&gt;drive&lt;/code&gt; method on &lt;code&gt;my_first_car&lt;/code&gt; will add 50 miles to the total &lt;code&gt;@mileage&lt;/code&gt; and print
  &lt;pre&gt;&lt;samp&gt;=&amp;gt; You drove 50 miles in your Honda Accord.&lt;/samp&gt;&lt;/pre&gt;
  to the console. Calling the &lt;code&gt;odometer&lt;/code&gt; method on &lt;code&gt;my_current_car&lt;/code&gt; will return the &lt;code&gt;@mileage&lt;/code&gt; that is currently on the Honda Civic and print
  &lt;pre&gt;&lt;samp&gt;=&amp;gt; The Honda Civic has 0 miles on it.&lt;/samp&gt;&lt;/pre&gt;
  to the console.
&lt;/p&gt;
&lt;p&gt;
  But what if we want a way to compare the mileage on both cars? This will be quite impossible with an instance method because one car does not know the mileage of another car. Here's where we need a &lt;i&gt;class&lt;/i&gt; method. Let's start by introducing some class variables that will store the information we need: &lt;code&gt;@@most_mileage&lt;/code&gt;, &lt;code&gt;@@make_with_most&lt;/code&gt;, and &lt;code&gt;@@model_with_most&lt;/code&gt;. Next, we will want to introduce the points during which we will need to check for which car is currently the one with the most mileage. That will look something like this:
  &lt;pre&gt;&lt;img width=&quot;100%&quot; src=&quot;/imgs/car-class-4.png&quot; /&gt;&lt;/pre&gt;
  Now, let's define what happens each time we check for which car currently has the most mileage, as well as what happens when we call the &lt;code&gt;most_mileage&lt;/code&gt; class method:
  &lt;pre&gt;&lt;img width=&quot;100%&quot; src=&quot;/imgs/car-class-5.png&quot; /&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
  Let's say that &lt;code&gt;my_current_car&lt;/code&gt; has 75,000 miles on it. But &lt;code&gt;my_first_car&lt;/code&gt; had 200,000 miles on it (and still ran like it was brand new!). Here's what it will look like for us to call the &lt;code&gt;most_mileage&lt;/code&gt; method as well as the message that would be printed to the console:
  &lt;pre&gt;&lt;code&gt;Car.most_mileage&lt;/code&gt;&lt;/pre&gt;
  &lt;pre&gt;&lt;samp&gt;=&amp;gt; The Honda Accord has the most mileage with 200000 miles...and counting!&lt;/samp&gt;&lt;/pre&gt;
  This method has successfully compared all existing instances of the &lt;code&gt;Car&lt;/code&gt; class and told us which one has the most mileage.
&lt;/p&gt;
&lt;p&gt;
  So here are the major takeaways I hope you have gained from this post:
  &lt;ol&gt;
    &lt;li&gt;Instance methods act on one particular instance of a class.&lt;/li&gt;
    &lt;li&gt;Class methods act on all existing instances of the class at once&lt;/li&gt;
    &lt;li&gt;My first car was glorious and had over 200,000 miles on it before it was sadly totaled.&lt;/li&gt;
  &lt;/ol&gt;
  'Tine out.
&lt;/p&gt;
&lt;p&gt;
   &lt;h4&gt;Resources:&lt;/h4&gt;
   &lt;ul&gt;
    &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.railstips.org/blog/archives/2009/05/11/class-and-instance-methods-in-ruby/&quot;&gt;RailsTips: Class and Instance Methods in Ruby&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://ruby-doc.org/core-2.2.0/doc/syntax/calling_methods_rdoc.html&quot;&gt;Ruby-Doc.org: Calling Methods&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://ruby-doc.org/core-2.2.0/doc/syntax/methods_rdoc.html&quot;&gt;Ruby-Doc.org: Methods&lt;/a&gt;&lt;/li&gt;
   &lt;/ul&gt;
&lt;/p&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">Assignment: Technical Blog | Object-Oriented Programming</summary></entry><entry><title type="html">Learning about Learning through Feedback on Feedback</title><link href="http://localhost:4000/blog/cultural/2015/05/10/c5-feedback.html" rel="alternate" type="text/html" title="Learning about Learning through Feedback on Feedback" /><published>2015-05-10T00:00:00-05:00</published><updated>2015-05-10T00:00:00-05:00</updated><id>http://localhost:4000/blog/cultural/2015/05/10/c5-feedback</id><content type="html" xml:base="http://localhost:4000/blog/cultural/2015/05/10/c5-feedback.html">&lt;h4&gt;Assignment: Cultural Blog | Feedback&lt;/h4&gt;

&lt;p&gt;A major focus of learning at Dev Bootcamp (DBC) is introspection. As students, we are asked to learn about our learning styles and to try to grow beyond our comfort zones. Every time we work together on a challenge (pair programming), we must provide anonymous feedback that is &lt;b&gt;A&lt;/b&gt;ctionable, &lt;b&gt;S&lt;/b&gt;pecific, and &lt;b&gt;K&lt;/b&gt;ind (&lt;b&gt;ASK&lt;/b&gt;). Before that feedback reaches our partners, other students rate how well the feedback meets these three requirements. If it does not meet the ASK standards, then the feedback is not delivered to the intended recipient. In order to make this process work, we are also required to rate 7 pieces of anonymous feedback each week. Through this process, we get to see how others provide feedback and think about the extent to which it satisfies the ASK framework. And if that wasn’t enough, we actually receive the feedback on our own feedback. This meta-feedback shows us whether our fellow boots thought that the feedback we gave to our partners was Actionable, Specific and Kind. So in a give week, I will write feedback for three of my cohort-mates, read feedback &lt;i&gt;from&lt;/i&gt; up to three cohort-mates on what it was like to pair with me, read and rate seven pieces of anonymous feedback intended for others, AND receive meta-feedback on those three messages that I sent. Aren’t you exhausted just &lt;i&gt;thinking&lt;/i&gt; about all that feedback?&lt;/p&gt;

&lt;p&gt;Before I get into what it’s like to experience all of that feedback, let’s back it up for a moment and talk about what we’re giving and receiving feedback &lt;i&gt;about&lt;/i&gt;: pair programming. Pair programming is when two people work together to write one set of code. This means that at any given time, either person can be typing and/or controlling the mouse. In order to avoid chaos, we try to have each person fulfilling one of two roles: driver and navigator. Of course, these roles mean different things to different people, but the general idea is that the driver is typing in the code, and the navigator is working on talking through proper syntax, looking up information from outside resources, and generally guiding the driver. As you can imagine, pairing can be quite difficult unless communication is very clear and direct. It is important for pairing partners to be open and honest with one another about their working styles and how they like to approach a problem. Perhaps this is why DBC asked us to focus so much on learning how we learn. &lt;b&gt;It’s all so meta!&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I am still working on figuring out how I like to pair with others, which I suppose will also vary depending on my partner. But in general, I tend to be a planner. I like to talk out the problem, strategize aloud, and then set up a step-by-step plan for getting to a solution. I was surprised to find that I like working with people who like to dive in and try things out. This isn’t my style at all when I’m working alone, but for some reason, I was able to navigate well with a “jump right in” kind of driver. It was definitely rewarding to solve a problem with someone who thinks so differently from the way that I do. On the other side of things, I have found it frustrating my partner is as indecisive as I am. For instance, I still have not developed a preference for driving vs. navigating at the beginning or the end of a challenge. While I do like the idea of switching halfway through, I still haven’t found a pair who cares which one to start with. We often dance around it for a while until one of us picks something, but I’m so bad at being that person! I guess I’ll have to get over that at some point. But once we decide on who’s doing what, things usually end up going relatively smoothly.&lt;/p&gt;

&lt;p&gt;So after the pairing session comes feedback time. I find it a little bit stressful to write feedback, especially because I have no more expertise than my partner in any of this stuff. I often find it difficult to reach the Actionable requirement on my feedback. It is hard to be constructive when I think my pair was awesome, and I just can’t think of what he or she should do differently. And then, of course, comes reading the feedback. This has sometimes been hard, but I know that my cohort-mates are trying to help me to be better at helping them. I have received a couple of pieces of similar feedback, which I absolutely take to heart (if two different people see me making the same mistakes, that seems like it must be a thing). For example, I am working on slowing down when I type to avoid typos. I usually catch them right away, but it is jarring to my pairs to see things moving so quickly, and then get deleted and replaced right away. If I slow down a bit, I can try to avoid the typos in the first place, and be more intentional about what ends up on the screen.&lt;/p&gt;

&lt;p&gt;Overall, I think that the pairing and feedback system are incredibly helpful in this process. I am a big believer in vulnerability as a tool for both personal growth and strengthening relationships. I think that when my cohort-mates and I are vulnerable to one another, we learn how to ask for help when we need it. We also get the benefit of our partner’s knowledge while working through a challenge. I don’t think I’ve gone through a single pairing session without learning something from my partner. In addition, I think that by the time we are on-site for Phase 1, 2, and 3, we will already be a tight-knit community. We are creating a safe environment for learning, exposing mistakes, asking questions, and building ourselves up together. This is what I always worked to accomplish for my students as a teacher, and I couldn’t ask for a better learning environment. I’m looking forward to seeing more of what a group so focused on improvement through feedback has to offer, and I can’t wait to meet my cohort face to face!&lt;/p&gt;</content><author><name>'Tine Zekis</name></author><summary type="html">Assignment: Cultural Blog | Feedback</summary></entry></feed>